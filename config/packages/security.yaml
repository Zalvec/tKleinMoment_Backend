security:
    encoders:
        App\Entity\User:
            algorithm: bcrypt


    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
        # used to reload user from session & other features (e.g. switch_user)
    firewalls:
        admin:
            pattern: ^/admin
            stateless: false
            anonymous: true
            form_login:
                login_path: /admin/login
                check_path: /admin/login
                csrf_token_generator: security.csrf.token_manager
            guard:
                authenticators:
                    - App\Security\AdminAuthenticator
                entry_point: App\Security\AdminAuthenticator
            logout:
                path: /admin/logout

        api:
#            pattern:   ^/api/users/
            stateless: true
            anonymous: true
            json_login:
                check_path: /api/login
                username_path: email
                password_path: password
                success_handler:    lexik_jwt_authentication.handler.authentication_success
                failure_handler:    lexik_jwt_authentication.handler.authentication_failure
#            logout:
#                path: app_logout
#                # where to redirect after logout
#                # target: app_any_route
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator

        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: lazy
            provider: app_user_provider

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # access restriction for admin dashboard
        - { path: ^/admin/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin, roles: ROLE_ADMIN }

        # access restriction for api endpoints

        # To be checked endpoints
        - { path: ^/api/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/register, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/menu, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/about, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/contact, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api,       roles: IS_AUTHENTICATED_ANONYMOUSLY }

