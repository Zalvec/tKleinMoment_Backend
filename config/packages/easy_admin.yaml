easy_admin:
    design:
        assets:
            # Changing the favicon (needs editing)
            favicon: '/img/favicon-camera.jpg'

            # adding custom css to dashboard
            css: [ 'css/admin_backend.css']

        # Make the menu overview
        menu:
            - {label: "Albums", icon: 'image', children: ['Album', 'Image', 'Tag'] }
            - {label: 'About', icon: 'address-card', children: ['About', 'Contact'] }
            - {label: 'Users', icon: 'user', children: ['User', 'Message'] }
            - {label: 'Data', icon: 'chart-bar', children: ['DownloadLog'] }
            - { label: 'Homepage', url: 'https://t-klein-moment.vercel.app/', target: '_blank', icon: 'desktop' }
            - { label: 'Deploy your changes. Takes 1-2 minutes.' }
            - { label: 'Deploy', url: 'https://api.vercel.com/v1/integrations/deploy/QmfHfr81rrhkeWGB5QDf5oFxPZcnUVYuF6bmqihEBSEqsQ/m62dUx5kjA', target: '_blank', icon: 'server' }

    # Define sitename
    site_name: "'t Klein Moment"

    # Define user info & display
    user:
        display_name: true
        display_avatar: true
        # firstName resembles getFirstName() or 'firstName' in user
        # change to view another name when logged in
        name_property_path: 'firstName'

    # Define the option of each row in your overview (show, edit, delete)
    list:
        title: '%%entity_label%%'
        collapse_actions: true
        actions:
            - { name: 'show', icon: 'info-circle', label: 'Show' }
            - { name: 'edit', icon: 'pencil', label: 'Edit' }
            - { name: 'delete', icon: 'trash-alt', label: 'Delete' }
        batch_actions: ['delete']                                       # Allow deleting multiple items at once

    # Define the formats of certain types
    formats:
        date:     'd/m/Y'
        time:     'H:i'
        datetime: 'd/m/Y H:i:s'

    entities:
        # List the entity class name you want to manage

        Album:
            class: App\Entity\Album                         # Which class (route)
            templates:
                field_image: 'admin/album/cover.html.twig'
            label: 'Album'                                  # The name you want to give your entity class
            list:                                           # All that is visible in the overview page of this entity class
                sort: ['id', 'ASC']                         # Sort all items ascending according to it's ID
                help: 'Overzicht van alle albums'           # A small info text under the title and above the table
                fields:                                     # A list of all the properties you want to be visible
                    - id
                    - active
                    - name
                    - { property: 'cover', type: 'image'}
                    - location
                    - event
                    - date
                    - description
                    # Which property, what name it will have in the table and what type (changes how it is displayed)
                    - { property: 'createdAt', label: 'Created at', type: 'datetime' }
                    - tags
                    - images
            show:                                           # All that will be visible when you go to 'show' of an row
                fields:
                    - id
                    - name
                    - { property: 'cover', type: 'image'}
                    - location
                    - event
                    - date
                    - description
                    - tags
#                    - images
                    - {property: 'images', type: 'collection', template: '/admin/album/imagesList.html.twig'}
                    - { property: 'createdAt', label: 'Created at', type: 'datetime' }
                    - { property: 'updatedAt', label: 'Updated at', type: 'datetime' }
            edit:
                fields:
                    - name
                    - { property: 'coverFile', type: 'vich_image', type_options: { required: false } }
                    - location
                    - event
                    - date
                    - description
                    - user
                    - tags
                    - {property: 'images', type: 'collection', template: '/admin/album/images.html.twig', type_options: {entry_type: 'App\Form\AlbumType' , 'by_reference': false}}
            form:                                           # All that will be visible when you go to 'edit' of an row or 'new' for new item
                fields:
#                    - { type: 'tab', label: 'Album Details'}
                    - name
                    - { property: 'coverFile', type: 'vich_image', type_options: { required: true } }
                    - location
                    - event
                    # Date can be written with the keyboard. There is the posibility to use a dropdown and select the date
                    - { property: 'date', type_options: { widget: single_text }}
                    - description
                    - user
                    - tags
                    # Enables you to add multiple new images and save them to the database as image and image of that album
                    # by_reference:false has to be added to enable the saving of the image
                    # The functionality of images is defined in From/AlbumType
#                    - { type: 'tab', label: 'Add images to this album'}
                    - {property: 'images', type: 'collection', type_options: {entry_type: 'App\Form\AlbumType' , 'by_reference': false}}

        About:
            class: App\Entity\About
            templates:
                field_image: 'admin/about/image.html.twig'
            label: 'About'
            list:
                batch_actions: ['-delete']
                sort: ['id', 'ASC']
                help: 'Overzicht van alle about segmenten'
                fields:
                    - id
                    - tableName
                    - header
                    # Retrieves the image from app.path.about_images and visual show the image
                    - { property: 'image', type: 'image'}
                    - text
            show:
                fields:
                    - id
                    - tableName
                    - header
                    - { property: 'image', type: 'image'}
                    - text
            edit:
                fields:
                    - header
                    - { property: 'imageFile', type: 'vich_image', type_options: { required: false } }
                    - { property: 'text', type: 'text_editor'}
            form:
                fields:
                    - tableName
                    - header
                    - { property: 'imageFile', type: 'vich_image', type_options: { required: true } }     # Enables you to upload images
                    - { property: 'text', type: 'text_editor'}          # Text can be writen in an text_editor and saved that way

        Contact:
            class: App\Entity\Contact
            label: 'Contact'
            list:
                batch_actions: ['-delete']
                actions: ['-search']
                sort: ['id', 'ASC']
                help: 'De contact informatie'
                fields:
                    - id
                    - name
                    - { property: 'email', type: 'email' }                              # Checks if the input is an email
                    - { property: 'phoneNumber', label: 'Phonenumber', type: 'tel' }
                    - { property: 'facebookLink', label: 'Facebook', type: 'url' }      # Makes the input in show as clickable
                    - { property: 'instagramLink', label: 'Instagram', type: 'url' }

        DownloadLog:
            class: App\Entity\DownloadLog
            templates:
                field_image: 'admin/download_log/image.html.twig'
            label: 'DownloadLog'
            disabled_actions: ['delete', 'new', 'edit']             # Actions that can't be used
            list:
                sort: ['id', 'ASC']
                help: "Overzicht van alle gedownloade foto's. Door wie en wanneer"
                fields:
                    - id
                    - user
                    - { property: 'user.name', label: 'User name' }
                    - { property: 'image', type: 'image'}
                    - { property: 'downloadedAt', label: 'Downloaded at', type: 'datetime' }
            show:
                fields:
                    - id
                    - user
                    - { property: 'user.name', label: 'User name', type: 'text' }
                    - { property: 'image', type: 'image'}
                    - { property: 'downloadedAt', label: 'Downloaded at', type: 'datetime' }

        Image:
            class: App\Entity\Image
            templates:
                field_image: 'admin/image/image.html.twig'
            label: 'Image'
            list:
                sort: ['id', 'ASC']
                help: "Overzicht van alle foto's die in een album staan of kunnen toegevoegd worden aan één"
                fields:
                    - id
                    - active
                    - { property: 'image', type: 'image'}
                    - description
                    - alt
                    - albums
                    - { property: 'uploadedAt', label: 'Uploaded at', type: 'datetime' }
                    - { property: 'updatedAt', label: 'Updated at', type: 'datetime' }
            show:
                fields:
                    - { property: 'image', type: 'image'}
                    - id
                    - description
                    - albums
                    - alt
            form:
                fields:
                    - { property: 'imageFile', type: 'vich_image', type_options: { required: true } }
                    - description
                    # You can at this image to different albums when you make it
                    - { property: 'albums', type_options: { by_reference: false } }
                    - alt
            edit:
                fields:
                    - { property: 'imageFile', type: 'vich_image', type_options: { required: false } }
                    - description
                    - { property: 'albums', type_options: { by_reference: false } }
                    - alt

        Message:
            class: App\Entity\Message
            label: 'Message'
            disabled_actions: ['delete', 'new']
            list:
                sort: ['id', 'ASC']
                help: 'Alle contactberichten die verzonden zijn door gebruikers en ingelogde gebruikers'
                fields:
                    - id
                    - {property: 'answered', type: 'toggle'}            # Makes a field toggleable
                    - email
                    - name
                    - { property: 'phoneNumber', label: 'Phone number', type: 'tel' }
                    - text
                    - { property: 'sentAt', label: 'Send date', type: 'datetime' }
            edit:
                fields:
                    - answered

        Tag:
            class: App\Entity\Tag
            label: 'Tag'
            list:
                batch_actions: ['-delete']
                sort: ['id', 'ASC']
                help: 'Overzcicht van alle tags die kunnen toegevoegd worden aan één of meerdere albums'
                fields:
                    - id
                    - description
                    - albums
            form:
                fields:
                    - description
                    # You can add multiple albums, which will receive this tag when saved
                    - { property: 'albums', type_options: { by_reference: false } }

        User:
            class: App\Entity\User
            controller: App\Controller\UserController
            label: 'User'
            disabled_actions: ['edit']
            list:
                batch_actions: ['-delete']
                sort: ['id', 'ASC']
                help: 'Overzicht van alle gebruikers die een account hebben aangemaakt'
                fields:
                    - id
                    - name
                    - { property: 'cosplayName', label: 'Cosplay name' }
                    - { property: 'email', type: 'email' }
                    - roles
                    - { property: 'createdAt', label: 'Created at', type: 'datetime' }
            show:
                fields:
                    - id
                    - firstName
                    - lastName
                    - cosplayName
                    - email
                    - roles
                    - createdAt
                    - downloadLogs
                    - likes
            form:
                fields:
                    - firstName
                    - lastName
                    - cosplayName
                    - email
                    - { property: 'plainPassword', type: 'text', type_options: { required: true } }